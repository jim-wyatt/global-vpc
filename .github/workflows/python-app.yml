# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  Build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.10","3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install the code linting and formatting tool Ruff
      run: pipx install ruff
    - name: Lint code with Ruff
      run: |
        mkdir -p ruff
        ruff check --output-format=github --target-version=py39 --verbose 2>&1 | tee -a ruff/lint-report.txt
    - name: Check code formatting with Ruff
      run: ruff format --diff --target-version=py39 --verbose 2>&1 | tee ruff/format-report.txt
      continue-on-error: false
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        mkdir -p coverage
        coverage run -m pytest test_global_vpc.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
        coverage xml -o coverage/coverage.xml
    - name: Archive test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          coverage/coverage.xml
          junit/test-results-*.xml
          ruff/lint-report.txt
          ruff/format-report.txt
  
  Publish:
    runs-on: ubuntu-24.04
    needs: Build
    steps:
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        path: ./
        merge-multiple: true
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          junit/test-results-*.xml
    - name: Publish Coverage Results
      uses: orgoro/coverage@v3.2
      with:
        coverageFile: ./coverage.xml
        thresholdAll: 0.95
        token: ${{ secrets.GITHUB_TOKEN }}
    
